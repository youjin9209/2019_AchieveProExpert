package Day2;
import java.util.Scanner;
/*
<문제> 
철수에게는 빨간색, 초록색, 파란색 세 개의 버튼이 있다. 버튼 하나를 누를 때 마다 특정 점수를 얻을 수 있으며, 철수는 1초에 한 번씩 버튼을 누를 수 있다. 
물론, 특정 시간에는 세 개의 버튼 중에서 한 개의 버튼만을 누를 수 있다. 각 시간마다 특정 버튼을 눌렀을 때 얻는 점수는 모두 다를 수 있다. 
예를 들어, 시간 1에 빨간색, 초록색, 파란색 버튼에 대한 점수가 3, 5, 7 로 주어질 수 있다. 이 경우에는 파란색을 누르는 것이 점수를 가장 많이 얻을 수 있다. 
물론, 시간 2에 각 버튼에 대한 점수는 또 다를 수 있다. 버튼을 누를 때에는 한 가지 규칙이 있는데, 연속하여 색깔이 같은 버튼을 두 번 누를 수 없다는 것이다. 
예를 들어, 시간 1에 초록색 버튼을 눌렀다면, 시간 2에는 초록색 버튼을 누를 수 없다. 이와 같은 규칙으로 각 시간마다 버튼을 누른다고 할 때, 
철수가 얻을 수 있는 점수의 최댓값을 출력하는 프로그램을 작성하시오.
<예제 입력>
3
27 8 28
18 36 40
7 20 8
<출력>
87
*/
/*
풀이 
1) 포인트 : 색깔 별로 관리 
2) 점화식 테이블 
d[i][0] : i번째에 빨간색을 누를 경우 / d[i][1] : i번째에 파란색을 누를 경우 / d[i][2] : i번째에 초록색을 누를 경우 
d[i][0] = max(d[i-1][1], d[i-1][2]) + a[i][0]
d[i][1] = max(d[i-1][0], d[i-1][2]) + a[i][1]
d[i][2] = max(d[i-1][0], d[i-1][1]) + a[i][2] 
*/
public class day2_버튼누르기 {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int N = sc.nextInt();
		int[][] a = new int[N+1][3];
		for (int i = 1; i <= N; i++) {
			for (int j = 0; j <= 2; j++) {
				a[i][j] = sc.nextInt();
			}
		}
		int[][] d = new int[N+1][3];
		d[1][0] = a[1][0]; d[1][1] = a[1][1]; d[1][2] = a[1][2]; 
		for (int i = 2; i <= N; i++) {
			d[i][0] = Math.max(d[i-1][1], d[i-1][2]) + a[i][0];
			d[i][1] = Math.max(d[i-1][0], d[i-1][2]) + a[i][1];
			d[i][2] = Math.max(d[i-1][0], d[i-1][1]) + a[i][2];
		}
		int result = Math.max(d[N][0], Math.max(d[N][1], d[N][2]));
		System.out.println(result);
	}
}
